# Javascript Node CircleCI 2.0 configuration file:
# - https://circleci.com/docs/2.0/language-javascript/
# - https://circleci.com/docs/2.0/project-walkthrough/#deploying-to-heroku
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

      # - image: circleci/python:3.6.2-stretch-browsers
      #   environment:
      #     FLASK_CONFIG: testing
      #     TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      # - image: circleci/postgres:9.6.5-alpine-ram
      #   environment:
      #     POSTGRES_USER: ubuntu
      #     POSTGRES_DB: circle_test
      #     POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run:
          name: install-dependencies
          command: npm install
      - run:
          name: tests
          command: npm test
      - run: echo "Hello from CircleCI!"
      - run: bash .circleci/setup-heroku.sh
      - add_ssh_keys:
          fingerprints:
            - "c3:50:39:8e:6a:94:14:ed:a7:8e:36:bc:d8:14:86:d8"
      - run:
          command: |
            echo "Inspecting environment."
            pwd
            ls
            printenv
      - run: git remote -v
      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku master
              # heroku run python manage.py deploy
              heroku restart
            fi
      - run: echo "Deployed to Heroku!"


      # - checkout
      # - restore_cache:
      #     key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      # - run:
      #     name: Install Python deps in a venv
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       pip install -r requirements/dev.txt
      # - save_cache:
      #     key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      #     paths:
      #       - "venv"
      # - run:
      #     command: |
      #       . venv/bin/activate
      #       python manage.py test
      # - store_artifacts:
      #     path: test-reports/
      #     destination: tr1
      # - store_test_results:
      #     path: test-reports/
      # - run: bash .circleci/setup-heroku.sh
      # - add_ssh_keys:
      #     fingerprints:
      #       - "48:a0:87:54:ca:75:32:12:c6:9e:a2:77:a4:7a:08:a4"
      # - deploy:
      #     name: Deploy Master to Heroku
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         git push heroku master
      #         heroku run python manage.py deploy
      #         heroku restart
      #       fi


# # Javascript Node CircleCI 2.0 configuration file
# #
# # Check https://circleci.com/docs/2.0/language-javascript/ for more details
# #
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:7.10
      
#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     # working_directory: ~/repo

#     steps:
#       - checkout
#       - run:
#           name: install-dependencies
#           command: npm install
#       - run:
#           name: tests
#           command: npm test
#       - run:
#           command: |
#             echo "Inspecting environment."
#             pwd
#             ls
#             printenv
#       - run: echo "Hello from CircleCI!"
  
#   deploy-job:
#     docker:
#       - image: my-image
#     working_directory: /tmp/my-project  
#     steps:
#       - run:
#           name: Run setup script
#           command: bash .circleci/setup-heroku.sh
#       - add_ssh_keys:
#           fingerprints:
#             - "c3:50:39:8e:6a:94:14:ed:a7:8e:36:bc:d8:14:86:d8"
#       - run:
#           name: Deploy Master to Heroku
#           command: |
#             git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master
#             # heroku run python manage.py deploy
#             heroku restart

# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build
#       # - test:
#       #     requires:
#       #       - build
#       #     filters:
#       #       branches:
#       #         only: master

# #  workflows:
# #    version: 2
# #    build-deploy:
# #      jobs:
# #        - build
#       #  - deploy-job:
#       #      requires:
#       #        - build-job
#       #      filters:
#       #        branches:
#       #          only: master

#     # FROM DEFAULT TEMPLATE:
#     # steps:
#     #   - checkout

#     #   # Download and cache dependencies
#     #   - restore_cache:
#     #       keys:
#     #       - v1-dependencies-{{ checksum "package.json" }}
#     #       # fallback to using the latest cache if no exact match is found
#     #       - v1-dependencies-

#     #   - run: yarn install

#     #   - save_cache:
#     #       paths:
#     #         - node_modules
#     #       key: v1-dependencies-{{ checksum "package.json" }}
        
#     #   # run tests!
#     #   - run: yarn test


